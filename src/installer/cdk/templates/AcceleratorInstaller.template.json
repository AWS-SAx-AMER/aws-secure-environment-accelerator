{
  "Parameters": {
    "ConfigS3Bucket": {
      "Type": "String",
      "Default": "pbmmaccel-config",
      "Description": "The S3 bucket name that contains the initial Accelerator configuration."
    },
    "ConfigRepositoryName": {
      "Type": "String",
      "Default": "PBMMAccel-Config-Repo",
      "Description": "The Code Commit repository name that contains the Accelerator configuration."
    },
    "ConfigBranchName": {
      "Type": "String",
      "Default": "master",
      "Description": "The Code Commit branch name that contains the Accelerator configuration"
    },
    "GithubSecretId": {
      "Type": "String",
      "Default": "accelerator/github-token",
      "Description": "The token to use to access the Github repository."
    },
    "GithubOwner": {
      "Type": "String",
      "Default": "aws-samples",
      "Description": "The owner of the Github repository containing the Accelerator code."
    },
    "GithubRepository": {
      "Type": "String",
      "Default": "aws-secure-environment-accelerator",
      "Description": "The name of the Github repository containing the Accelerator code."
    },
    "GithubBranch": {
      "Type": "String",
      "Default": "release/v1.1.6",
      "Description": "The branch of the Github repository containing the Accelerator code."
    },
    "NotificationEmail": {
      "Type": "String",
      "Description": "The notification email that will get Accelerator State Machine execution notifications."
    }
  },
  "Resources": {
    "InstallerProjectRole3966310A": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "codebuild.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "RoleName": "PBMMAccel-CB-Installer",
        "Tags": [
          {
            "Key": "Accelerator",
            "Value": "PBMM"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "InstallerStack/InstallerProjectRole/Resource"
      }
    },
    "InstallerProjectRoleDefaultPolicyB8EC5C1F": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ecr:*",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ecr:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":repository/aws-cdk/*"
                  ]
                ]
              }
            },
            {
              "Action": "ecr:GetAuthorizationToken",
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "cloudformation:*",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:cloudformation:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":stack/*"
                  ]
                ]
              }
            },
            {
              "Action": "s3:*",
              "Effect": "Allow",
              "Resource": "arn:aws:s3:::cdktoolkit-stagingbucket-*"
            },
            {
              "Action": "*",
              "Condition": {
                "ForAnyValue:StringEquals": {
                  "aws:CalledVia": [
                    "cloudformation.amazonaws.com"
                  ]
                }
              },
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":log-group:/aws/codebuild/",
                      {
                        "Ref": "InstallerProject879FF821"
                      }
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":log-group:/aws/codebuild/",
                      {
                        "Ref": "InstallerProject879FF821"
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":codebuild:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":report-group/",
                    {
                      "Ref": "InstallerProject879FF821"
                    },
                    "-*"
                  ]
                ]
              }
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "ArtifactsBucket2AAC5544",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "ArtifactsBucket2AAC5544",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "InstallerProjectRoleDefaultPolicyB8EC5C1F",
        "Roles": [
          {
            "Ref": "InstallerProjectRole3966310A"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "InstallerStack/InstallerProjectRole/DefaultPolicy/Resource"
      }
    },
    "InstallerProject879FF821": {
      "Type": "AWS::CodeBuild::Project",
      "Properties": {
        "Artifacts": {
          "Type": "CODEPIPELINE"
        },
        "Environment": {
          "ComputeType": "BUILD_GENERAL1_MEDIUM",
          "EnvironmentVariables": [
            {
              "Name": "ACCELERATOR_NAME",
              "Type": "PLAINTEXT",
              "Value": "PBMM"
            },
            {
              "Name": "ACCELERATOR_PREFIX",
              "Type": "PLAINTEXT",
              "Value": "PBMMAccel-"
            },
            {
              "Name": "ACCELERATOR_STATE_MACHINE_NAME",
              "Type": "PLAINTEXT",
              "Value": "PBMMAccel-MainStateMachine_sm"
            },
            {
              "Name": "CONFIG_REPOSITORY_NAME",
              "Type": "PLAINTEXT",
              "Value": {
                "Ref": "ConfigRepositoryName"
              }
            },
            {
              "Name": "CONFIG_BRANCH_NAME",
              "Type": "PLAINTEXT",
              "Value": {
                "Ref": "ConfigBranchName"
              }
            },
            {
              "Name": "CONFIG_S3_BUCKET",
              "Type": "PLAINTEXT",
              "Value": {
                "Ref": "ConfigS3Bucket"
              }
            },
            {
              "Name": "ENABLE_PREBUILT_PROJECT",
              "Type": "PLAINTEXT",
              "Value": "true"
            },
            {
              "Name": "NOTIFICATION_EMAIL",
              "Type": "PLAINTEXT",
              "Value": {
                "Ref": "NotificationEmail"
              }
            },
            {
              "Name": "SOURCE_REPO",
              "Type": "PLAINTEXT",
              "Value": {
                "Ref": "GithubRepository"
              }
            },
            {
              "Name": "SOURCE_BRANCH",
              "Type": "PLAINTEXT",
              "Value": {
                "Ref": "GithubBranch"
              }
            },
            {
              "Name": "SOURCE_OWNER",
              "Type": "PLAINTEXT",
              "Value": {
                "Ref": "GithubOwner"
              }
            }
          ],
          "Image": "aws/codebuild/standard:3.0",
          "PrivilegedMode": true,
          "Type": "LINUX_CONTAINER"
        },
        "ServiceRole": {
          "Fn::GetAtt": [
            "InstallerProjectRole3966310A",
            "Arn"
          ]
        },
        "Source": {
          "BuildSpec": "{\n  \"version\": \"0.2\",\n  \"phases\": {\n    \"install\": {\n      \"runtime-versions\": {\n        \"nodejs\": 12\n      },\n      \"commands\": [\n        \"npm install --global pnpm\",\n        \"pnpm install --unsafe-perm\"\n      ]\n    },\n    \"build\": {\n      \"commands\": [\n        \"cd src/core/cdk\",\n        \"pnpx cdk bootstrap --require-approval never\",\n        \"pnpx cdk deploy --require-approval never\"\n      ]\n    }\n  }\n}",
          "Type": "CODEPIPELINE"
        },
        "Name": "PBMMAccel-InstallerProject_pl",
        "Tags": [
          {
            "Key": "Accelerator",
            "Value": "PBMM"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "InstallerStack/InstallerProject/Resource"
      }
    },
    "ExecutionRoleName32216FBD": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "RoleName": "PBMMAccel-L-SFN-Execution",
        "Tags": [
          {
            "Key": "Accelerator",
            "Value": "PBMM"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "InstallerStack/ExecutionRoleName/Resource"
      }
    },
    "ExecutionRoleNameDefaultPolicyF1EBADDF": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "ssm:PutParameter",
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "states:StartExecution",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:states:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":stateMachine:PBMMAccel-MainStateMachine_sm"
                  ]
                ]
              }
            },
            {
              "Action": [
                "codepipeline:PutJobSuccessResult",
                "codepipeline:PutJobFailureResult"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "ExecutionRoleNameDefaultPolicyF1EBADDF",
        "Roles": [
          {
            "Ref": "ExecutionRoleName32216FBD"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "InstallerStack/ExecutionRoleName/DefaultPolicy/Resource"
      }
    },
    "ExecutionLambda949691DD": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "ZipFile": "const AWS = require('aws-sdk');\r\n\r\nconst codepipeline = new AWS.CodePipeline();\r\nconst sfn = new AWS.StepFunctions();\r\n\r\nexports.handler = async function (event, context) {\r\n  console.info(`Starting state machine execution...`);\r\n  console.info(JSON.stringify(event, null, 2));\r\n\r\n  const jobInfo = event['CodePipeline.job'];\r\n  const jobId = jobInfo.id;\r\n\r\n  try {\r\n    const userParametersString = jobInfo.data.actionConfiguration.configuration.UserParameters;\r\n    const userParameters = JSON.parse(userParametersString);\r\n    if (!userParameters.stateMachineArn) {\r\n      throw new Error(`\"stateMachineArn\" is missing from user parameters`);\r\n    }\r\n\r\n    await sfn\r\n      .startExecution({\r\n        stateMachineArn: userParameters.stateMachineArn,\r\n      })\r\n      .promise();\r\n\r\n    return codepipeline\r\n      .putJobSuccessResult({\r\n        jobId,\r\n      })\r\n      .promise();\r\n  } catch (e) {\r\n    console.info(`Unexpected error while starting execution: ${e}`);\r\n\r\n    return codepipeline\r\n      .putJobFailureResult({\r\n        jobId,\r\n        failureDetails: {\r\n          externalExecutionId: context.awsRequestId,\r\n          type: 'JobFailed',\r\n          message: JSON.stringify(e),\r\n        },\r\n      })\r\n      .promise();\r\n  }\r\n};\r\n"
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "ExecutionRoleName32216FBD",
            "Arn"
          ]
        },
        "Runtime": "nodejs12.x",
        "FunctionName": "PBMMAccel-Installer-StartExecution",
        "Tags": [
          {
            "Key": "Accelerator",
            "Value": "PBMM"
          }
        ]
      },
      "DependsOn": [
        "ExecutionRoleNameDefaultPolicyF1EBADDF",
        "ExecutionRoleName32216FBD"
      ],
      "Metadata": {
        "aws:cdk:path": "InstallerStack/ExecutionLambda/Resource"
      }
    },
    "SaveApplicationVersionLambda1535A3E2": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "ZipFile": "const AWS = require('aws-sdk');\r\n\r\nconst codepipeline = new AWS.CodePipeline();\r\nconst ssm = new AWS.SSM();\r\n\r\nexports.handler = async function (event, context) {\r\n  console.info(`Saving Accelerator Application Version...`);\r\n  console.info(JSON.stringify(event, null, 2));\r\n\r\n  const jobInfo = event['CodePipeline.job'];\r\n  const jobId = jobInfo.id;\r\n  \r\n  try {\r\n    const userParametersString = jobInfo.data.actionConfiguration.configuration.UserParameters;\r\n    const userParameters = JSON.parse(userParametersString);\r\n\r\n    const currentTime = new Date();\r\n    const versionData = {\r\n      Branch: userParameters.branch,\r\n      Repository: userParameters.repository,\r\n      CommitId: userParameters.commitId,\r\n      Owner:userParameters.owner,\r\n      DeployTime: currentTime.toString(),\r\n      AcceleratorVersion: userParameters.acceleratorVersion,\r\n    }\r\n    const param = await ssm.putParameter({\r\n      Name: '/accelerator/version', \r\n      Value: JSON.stringify(versionData, null, 2), \r\n      Type: 'String',\r\n      Overwrite: true,\r\n    }).promise();\r\n    console.log(`Updated Application Version : ${param}`);\r\n    return codepipeline\r\n      .putJobSuccessResult({\r\n        jobId,\r\n      })\r\n      .promise();\r\n  } catch (e) {\r\n    console.info(`Unexpected error while Saving Application Versio: ${e}`);\r\n    return codepipeline\r\n      .putJobFailureResult({\r\n        jobId,\r\n        failureDetails: {\r\n          externalExecutionId: context.awsRequestId,\r\n          type: 'JobFailed',\r\n          message: JSON.stringify(e),\r\n        },\r\n      })\r\n      .promise();\r\n  }\r\n};\r\n"
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "ExecutionRoleName32216FBD",
            "Arn"
          ]
        },
        "Runtime": "nodejs12.x",
        "FunctionName": "PBMMAccel-Installer-SaveApplicationVersion",
        "Tags": [
          {
            "Key": "Accelerator",
            "Value": "PBMM"
          }
        ]
      },
      "DependsOn": [
        "ExecutionRoleNameDefaultPolicyF1EBADDF",
        "ExecutionRoleName32216FBD"
      ],
      "Metadata": {
        "aws:cdk:path": "InstallerStack/SaveApplicationVersionLambda/Resource"
      }
    },
    "InstallerPipelineRole1F8864A8": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "codepipeline.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "RoleName": "PBMMAccel-CP-Installer",
        "Tags": [
          {
            "Key": "Accelerator",
            "Value": "PBMM"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "InstallerStack/InstallerPipelineRole/Resource"
      }
    },
    "InstallerPipelineRoleDefaultPolicyA2A45F5C": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject*",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "ArtifactsBucket2AAC5544",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "ArtifactsBucket2AAC5544",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "InstallerPipelineRole1F8864A8",
                  "Arn"
                ]
              }
            },
            {
              "Action": [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:StopBuild"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "InstallerProject879FF821",
                  "Arn"
                ]
              }
            },
            {
              "Action": "lambda:ListFunctions",
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "SaveApplicationVersionLambda1535A3E2",
                  "Arn"
                ]
              }
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "ExecutionLambda949691DD",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "InstallerPipelineRoleDefaultPolicyA2A45F5C",
        "Roles": [
          {
            "Ref": "InstallerPipelineRole1F8864A8"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "InstallerStack/InstallerPipelineRole/DefaultPolicy/Resource"
      }
    },
    "ArtifactsBucket2AAC5544": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "Tags": [
          {
            "Key": "Accelerator",
            "Value": "PBMM"
          }
        ]
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "InstallerStack/ArtifactsBucket/Resource"
      }
    },
    "PipelineC660917D": {
      "Type": "AWS::CodePipeline::Pipeline",
      "Properties": {
        "RoleArn": {
          "Fn::GetAtt": [
            "InstallerPipelineRole1F8864A8",
            "Arn"
          ]
        },
        "Stages": [
          {
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Source",
                  "Owner": "ThirdParty",
                  "Provider": "GitHub",
                  "Version": "1"
                },
                "Configuration": {
                  "Owner": {
                    "Ref": "GithubOwner"
                  },
                  "Repo": {
                    "Ref": "GithubRepository"
                  },
                  "Branch": {
                    "Ref": "GithubBranch"
                  },
                  "OAuthToken": {
                    "Fn::Join": [
                      "",
                      [
                        "{{resolve:secretsmanager:",
                        {
                          "Ref": "GithubSecretId"
                        },
                        ":SecretString:::}}"
                      ]
                    ]
                  },
                  "PollForSourceChanges": false
                },
                "Name": "GithubSource",
                "Namespace": "Source_GithubSource_NS",
                "OutputArtifacts": [
                  {
                    "Name": "Artifact_Source_GithubSource"
                  }
                ],
                "RunOrder": 1
              }
            ],
            "Name": "Source"
          },
          {
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Build",
                  "Owner": "AWS",
                  "Provider": "CodeBuild",
                  "Version": "1"
                },
                "Configuration": {
                  "ProjectName": {
                    "Ref": "InstallerProject879FF821"
                  }
                },
                "InputArtifacts": [
                  {
                    "Name": "Artifact_Source_GithubSource"
                  }
                ],
                "Name": "DeployAccelerator",
                "RoleArn": {
                  "Fn::GetAtt": [
                    "InstallerPipelineRole1F8864A8",
                    "Arn"
                  ]
                },
                "RunOrder": 1
              }
            ],
            "Name": "Deploy"
          },
          {
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Invoke",
                  "Owner": "AWS",
                  "Provider": "Lambda",
                  "Version": "1"
                },
                "Configuration": {
                  "FunctionName": {
                    "Ref": "SaveApplicationVersionLambda1535A3E2"
                  },
                  "UserParameters": {
                    "Fn::Join": [
                      "",
                      [
                        "{\"commitId\":\"#{Source_GithubSource_NS.CommitId}\",\"repository\":\"",
                        {
                          "Ref": "GithubRepository"
                        },
                        "\",\"owner\":\"",
                        {
                          "Ref": "GithubOwner"
                        },
                        "\",\"branch\":\"",
                        {
                          "Ref": "GithubBranch"
                        },
                        "\"}"
                      ]
                    ]
                  }
                },
                "Name": "UpdateVersion",
                "RoleArn": {
                  "Fn::GetAtt": [
                    "InstallerPipelineRole1F8864A8",
                    "Arn"
                  ]
                },
                "RunOrder": 1
              }
            ],
            "Name": "UpdateVersion"
          },
          {
            "Actions": [
              {
                "ActionTypeId": {
                  "Category": "Invoke",
                  "Owner": "AWS",
                  "Provider": "Lambda",
                  "Version": "1"
                },
                "Configuration": {
                  "FunctionName": {
                    "Ref": "ExecutionLambda949691DD"
                  },
                  "UserParameters": {
                    "Fn::Join": [
                      "",
                      [
                        "{\"stateMachineArn\":\"arn:aws:states:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":stateMachine:PBMMAccel-MainStateMachine_sm\"}"
                      ]
                    ]
                  }
                },
                "Name": "ExecuteAcceleratorStateMachine",
                "RoleArn": {
                  "Fn::GetAtt": [
                    "InstallerPipelineRole1F8864A8",
                    "Arn"
                  ]
                },
                "RunOrder": 1
              }
            ],
            "Name": "Execute"
          }
        ],
        "ArtifactStore": {
          "Location": {
            "Ref": "ArtifactsBucket2AAC5544"
          },
          "Type": "S3"
        },
        "Name": "PBMMAccel-InstallerPipeline",
        "Tags": [
          {
            "Key": "Accelerator",
            "Value": "PBMM"
          }
        ]
      },
      "DependsOn": [
        "InstallerPipelineRoleDefaultPolicyA2A45F5C",
        "InstallerPipelineRole1F8864A8"
      ],
      "Metadata": {
        "aws:cdk:path": "InstallerStack/Pipeline/Resource"
      }
    }
  }
}