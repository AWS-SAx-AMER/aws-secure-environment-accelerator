{
  "version": "tree-0.1",
  "tree": {
    "id": "App",
    "path": "",
    "children": {
      "Tree": {
        "id": "Tree",
        "path": "Tree"
      },
      "InstallerStack": {
        "id": "InstallerStack",
        "path": "InstallerStack",
        "children": {
          "ConfigS3Bucket": {
            "id": "ConfigS3Bucket",
            "path": "InstallerStack/ConfigS3Bucket"
          },
          "ConfigRepositoryName": {
            "id": "ConfigRepositoryName",
            "path": "InstallerStack/ConfigRepositoryName"
          },
          "ConfigBranchName": {
            "id": "ConfigBranchName",
            "path": "InstallerStack/ConfigBranchName"
          },
          "GithubSecretId": {
            "id": "GithubSecretId",
            "path": "InstallerStack/GithubSecretId"
          },
          "GithubOwner": {
            "id": "GithubOwner",
            "path": "InstallerStack/GithubOwner"
          },
          "GithubRepository": {
            "id": "GithubRepository",
            "path": "InstallerStack/GithubRepository"
          },
          "GithubBranch": {
            "id": "GithubBranch",
            "path": "InstallerStack/GithubBranch"
          },
          "Notification Email": {
            "id": "Notification Email",
            "path": "InstallerStack/Notification Email"
          },
          "InstallerProjectRole": {
            "id": "InstallerProjectRole",
            "path": "InstallerStack/InstallerProjectRole",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "InstallerStack/InstallerProjectRole/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                  "aws:cdk:cloudformation:props": {
                    "assumeRolePolicyDocument": {
                      "Statement": [
                        {
                          "Action": "sts:AssumeRole",
                          "Effect": "Allow",
                          "Principal": {
                            "Service": "codebuild.amazonaws.com"
                          }
                        }
                      ],
                      "Version": "2012-10-17"
                    },
                    "roleName": "PBMMAccel-CB-Installer",
                    "tags": [
                      {
                        "key": "Accelerator",
                        "value": "PBMM"
                      }
                    ]
                  }
                }
              },
              "DefaultPolicy": {
                "id": "DefaultPolicy",
                "path": "InstallerStack/InstallerProjectRole/DefaultPolicy",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "InstallerStack/InstallerProjectRole/DefaultPolicy/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                      "aws:cdk:cloudformation:props": {
                        "policyDocument": {
                          "Statement": [
                            {
                              "Action": "ecr:*",
                              "Effect": "Allow",
                              "Resource": {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:aws:ecr:",
                                    {
                                      "Ref": "AWS::Region"
                                    },
                                    ":",
                                    {
                                      "Ref": "AWS::AccountId"
                                    },
                                    ":repository/aws-cdk/*"
                                  ]
                                ]
                              }
                            },
                            {
                              "Action": "ecr:GetAuthorizationToken",
                              "Effect": "Allow",
                              "Resource": "*"
                            },
                            {
                              "Action": "cloudformation:*",
                              "Effect": "Allow",
                              "Resource": {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:aws:cloudformation:",
                                    {
                                      "Ref": "AWS::Region"
                                    },
                                    ":",
                                    {
                                      "Ref": "AWS::AccountId"
                                    },
                                    ":stack/*"
                                  ]
                                ]
                              }
                            },
                            {
                              "Action": "s3:*",
                              "Effect": "Allow",
                              "Resource": "arn:aws:s3:::cdktoolkit-stagingbucket-*"
                            },
                            {
                              "Action": "*",
                              "Condition": {
                                "ForAnyValue:StringEquals": {
                                  "aws:CalledVia": [
                                    "cloudformation.amazonaws.com"
                                  ]
                                }
                              },
                              "Effect": "Allow",
                              "Resource": "*"
                            },
                            {
                              "Action": [
                                "logs:CreateLogGroup",
                                "logs:CreateLogStream",
                                "logs:PutLogEvents"
                              ],
                              "Effect": "Allow",
                              "Resource": [
                                {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      ":logs:",
                                      {
                                        "Ref": "AWS::Region"
                                      },
                                      ":",
                                      {
                                        "Ref": "AWS::AccountId"
                                      },
                                      ":log-group:/aws/codebuild/",
                                      {
                                        "Ref": "InstallerProject879FF821"
                                      }
                                    ]
                                  ]
                                },
                                {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      ":logs:",
                                      {
                                        "Ref": "AWS::Region"
                                      },
                                      ":",
                                      {
                                        "Ref": "AWS::AccountId"
                                      },
                                      ":log-group:/aws/codebuild/",
                                      {
                                        "Ref": "InstallerProject879FF821"
                                      },
                                      ":*"
                                    ]
                                  ]
                                }
                              ]
                            },
                            {
                              "Action": [
                                "codebuild:CreateReportGroup",
                                "codebuild:CreateReport",
                                "codebuild:UpdateReport",
                                "codebuild:BatchPutTestCases"
                              ],
                              "Effect": "Allow",
                              "Resource": {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:",
                                    {
                                      "Ref": "AWS::Partition"
                                    },
                                    ":codebuild:",
                                    {
                                      "Ref": "AWS::Region"
                                    },
                                    ":",
                                    {
                                      "Ref": "AWS::AccountId"
                                    },
                                    ":report-group/",
                                    {
                                      "Ref": "InstallerProject879FF821"
                                    },
                                    "-*"
                                  ]
                                ]
                              }
                            },
                            {
                              "Action": [
                                "s3:GetObject*",
                                "s3:GetBucket*",
                                "s3:List*"
                              ],
                              "Effect": "Allow",
                              "Resource": [
                                {
                                  "Fn::GetAtt": [
                                    "ArtifactsBucket2AAC5544",
                                    "Arn"
                                  ]
                                },
                                {
                                  "Fn::Join": [
                                    "",
                                    [
                                      {
                                        "Fn::GetAtt": [
                                          "ArtifactsBucket2AAC5544",
                                          "Arn"
                                        ]
                                      },
                                      "/*"
                                    ]
                                  ]
                                }
                              ]
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "policyName": "InstallerProjectRoleDefaultPolicyB8EC5C1F",
                        "roles": [
                          {
                            "Ref": "InstallerProjectRole3966310A"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "InstallerProject": {
            "id": "InstallerProject",
            "path": "InstallerStack/InstallerProject",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "InstallerStack/InstallerProject/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::CodeBuild::Project",
                  "aws:cdk:cloudformation:props": {
                    "artifacts": {
                      "type": "CODEPIPELINE"
                    },
                    "environment": {
                      "type": "LINUX_CONTAINER",
                      "image": "aws/codebuild/standard:3.0",
                      "privilegedMode": true,
                      "computeType": "BUILD_GENERAL1_MEDIUM",
                      "environmentVariables": [
                        {
                          "name": "ACCELERATOR_NAME",
                          "type": "PLAINTEXT",
                          "value": "PBMM"
                        },
                        {
                          "name": "ACCELERATOR_PREFIX",
                          "type": "PLAINTEXT",
                          "value": "PBMMAccel-"
                        },
                        {
                          "name": "ACCELERATOR_STATE_MACHINE_NAME",
                          "type": "PLAINTEXT",
                          "value": "PBMMAccel-MainStateMachine_sm"
                        },
                        {
                          "name": "CONFIG_REPOSITORY_NAME",
                          "type": "PLAINTEXT",
                          "value": {
                            "Ref": "ConfigRepositoryName"
                          }
                        },
                        {
                          "name": "CONFIG_BRANCH_NAME",
                          "type": "PLAINTEXT",
                          "value": {
                            "Ref": "ConfigBranchName"
                          }
                        },
                        {
                          "name": "CONFIG_S3_BUCKET",
                          "type": "PLAINTEXT",
                          "value": {
                            "Ref": "ConfigS3Bucket"
                          }
                        },
                        {
                          "name": "ENABLE_PREBUILT_PROJECT",
                          "type": "PLAINTEXT",
                          "value": "true"
                        },
                        {
                          "name": "NOTIFICATION_EMAIL",
                          "type": "PLAINTEXT",
                          "value": {
                            "Ref": "NotificationEmail"
                          }
                        },
                        {
                          "name": "SOURCE_REPO",
                          "type": "PLAINTEXT",
                          "value": {
                            "Ref": "GithubRepository"
                          }
                        },
                        {
                          "name": "SOURCE_BRANCH",
                          "type": "PLAINTEXT",
                          "value": {
                            "Ref": "GithubBranch"
                          }
                        },
                        {
                          "name": "SOURCE_OWNER",
                          "type": "PLAINTEXT",
                          "value": {
                            "Ref": "GithubOwner"
                          }
                        }
                      ]
                    },
                    "serviceRole": {
                      "Fn::GetAtt": [
                        "InstallerProjectRole3966310A",
                        "Arn"
                      ]
                    },
                    "source": {
                      "type": "CODEPIPELINE",
                      "buildSpec": "{\n  \"version\": \"0.2\",\n  \"phases\": {\n    \"install\": {\n      \"runtime-versions\": {\n        \"nodejs\": 12\n      },\n      \"commands\": [\n        \"npm install --global pnpm\",\n        \"pnpm install --unsafe-perm\"\n      ]\n    },\n    \"build\": {\n      \"commands\": [\n        \"cd src/core/cdk\",\n        \"pnpx cdk bootstrap --require-approval never\",\n        \"pnpx cdk deploy --require-approval never\"\n      ]\n    }\n  }\n}"
                    },
                    "name": "PBMMAccel-InstallerProject_pl",
                    "tags": [
                      {
                        "key": "Accelerator",
                        "value": "PBMM"
                      }
                    ]
                  }
                }
              }
            }
          },
          "ExecutionRoleName": {
            "id": "ExecutionRoleName",
            "path": "InstallerStack/ExecutionRoleName",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "InstallerStack/ExecutionRoleName/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                  "aws:cdk:cloudformation:props": {
                    "assumeRolePolicyDocument": {
                      "Statement": [
                        {
                          "Action": "sts:AssumeRole",
                          "Effect": "Allow",
                          "Principal": {
                            "Service": "lambda.amazonaws.com"
                          }
                        }
                      ],
                      "Version": "2012-10-17"
                    },
                    "roleName": "PBMMAccel-L-SFN-Execution",
                    "tags": [
                      {
                        "key": "Accelerator",
                        "value": "PBMM"
                      }
                    ]
                  }
                }
              },
              "DefaultPolicy": {
                "id": "DefaultPolicy",
                "path": "InstallerStack/ExecutionRoleName/DefaultPolicy",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "InstallerStack/ExecutionRoleName/DefaultPolicy/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                      "aws:cdk:cloudformation:props": {
                        "policyDocument": {
                          "Statement": [
                            {
                              "Action": [
                                "logs:CreateLogGroup",
                                "logs:CreateLogStream",
                                "logs:PutLogEvents"
                              ],
                              "Effect": "Allow",
                              "Resource": "*"
                            },
                            {
                              "Action": "ssm:PutParameter",
                              "Effect": "Allow",
                              "Resource": "*"
                            },
                            {
                              "Action": "states:StartExecution",
                              "Effect": "Allow",
                              "Resource": {
                                "Fn::Join": [
                                  "",
                                  [
                                    "arn:aws:states:",
                                    {
                                      "Ref": "AWS::Region"
                                    },
                                    ":",
                                    {
                                      "Ref": "AWS::AccountId"
                                    },
                                    ":stateMachine:PBMMAccel-MainStateMachine_sm"
                                  ]
                                ]
                              }
                            },
                            {
                              "Action": [
                                "codepipeline:PutJobSuccessResult",
                                "codepipeline:PutJobFailureResult"
                              ],
                              "Effect": "Allow",
                              "Resource": "*"
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "policyName": "ExecutionRoleNameDefaultPolicyF1EBADDF",
                        "roles": [
                          {
                            "Ref": "ExecutionRoleName32216FBD"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "ExecutionLambda": {
            "id": "ExecutionLambda",
            "path": "InstallerStack/ExecutionLambda",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "InstallerStack/ExecutionLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "zipFile": "const AWS = require('aws-sdk');\r\n\r\nconst codepipeline = new AWS.CodePipeline();\r\nconst sfn = new AWS.StepFunctions();\r\n\r\nexports.handler = async function (event, context) {\r\n  console.info(`Starting state machine execution...`);\r\n  console.info(JSON.stringify(event, null, 2));\r\n\r\n  const jobInfo = event['CodePipeline.job'];\r\n  const jobId = jobInfo.id;\r\n\r\n  try {\r\n    const userParametersString = jobInfo.data.actionConfiguration.configuration.UserParameters;\r\n    const userParameters = JSON.parse(userParametersString);\r\n    if (!userParameters.stateMachineArn) {\r\n      throw new Error(`\"stateMachineArn\" is missing from user parameters`);\r\n    }\r\n\r\n    await sfn\r\n      .startExecution({\r\n        stateMachineArn: userParameters.stateMachineArn,\r\n      })\r\n      .promise();\r\n\r\n    return codepipeline\r\n      .putJobSuccessResult({\r\n        jobId,\r\n      })\r\n      .promise();\r\n  } catch (e) {\r\n    console.info(`Unexpected error while starting execution: ${e}`);\r\n\r\n    return codepipeline\r\n      .putJobFailureResult({\r\n        jobId,\r\n        failureDetails: {\r\n          externalExecutionId: context.awsRequestId,\r\n          type: 'JobFailed',\r\n          message: JSON.stringify(e),\r\n        },\r\n      })\r\n      .promise();\r\n  }\r\n};\r\n"
                    },
                    "handler": "index.handler",
                    "role": {
                      "Fn::GetAtt": [
                        "ExecutionRoleName32216FBD",
                        "Arn"
                      ]
                    },
                    "runtime": "nodejs12.x",
                    "functionName": "PBMMAccel-Installer-StartExecution",
                    "tags": [
                      {
                        "key": "Accelerator",
                        "value": "PBMM"
                      }
                    ]
                  }
                }
              }
            }
          },
          "SaveApplicationVersionLambda": {
            "id": "SaveApplicationVersionLambda",
            "path": "InstallerStack/SaveApplicationVersionLambda",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "InstallerStack/SaveApplicationVersionLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "zipFile": "const AWS = require('aws-sdk');\r\n\r\nconst codepipeline = new AWS.CodePipeline();\r\nconst ssm = new AWS.SSM();\r\n\r\nexports.handler = async function (event, context) {\r\n  console.info(`Saving Accelerator Application Version...`);\r\n  console.info(JSON.stringify(event, null, 2));\r\n\r\n  const jobInfo = event['CodePipeline.job'];\r\n  const jobId = jobInfo.id;\r\n  \r\n  try {\r\n    const userParametersString = jobInfo.data.actionConfiguration.configuration.UserParameters;\r\n    const userParameters = JSON.parse(userParametersString);\r\n\r\n    const currentTime = new Date();\r\n    const versionData = {\r\n      Branch: userParameters.branch,\r\n      Repository: userParameters.repository,\r\n      CommitId: userParameters.commitId,\r\n      Owner:userParameters.owner,\r\n      DeployTime: currentTime.toString(),\r\n      AcceleratorVersion: userParameters.acceleratorVersion,\r\n    }\r\n    const param = await ssm.putParameter({\r\n      Name: '/accelerator/version', \r\n      Value: JSON.stringify(versionData, null, 2), \r\n      Type: 'String',\r\n      Overwrite: true,\r\n    }).promise();\r\n    console.log(`Updated Application Version : ${param}`);\r\n    return codepipeline\r\n      .putJobSuccessResult({\r\n        jobId,\r\n      })\r\n      .promise();\r\n  } catch (e) {\r\n    console.info(`Unexpected error while Saving Application Versio: ${e}`);\r\n    return codepipeline\r\n      .putJobFailureResult({\r\n        jobId,\r\n        failureDetails: {\r\n          externalExecutionId: context.awsRequestId,\r\n          type: 'JobFailed',\r\n          message: JSON.stringify(e),\r\n        },\r\n      })\r\n      .promise();\r\n  }\r\n};\r\n"
                    },
                    "handler": "index.handler",
                    "role": {
                      "Fn::GetAtt": [
                        "ExecutionRoleName32216FBD",
                        "Arn"
                      ]
                    },
                    "runtime": "nodejs12.x",
                    "functionName": "PBMMAccel-Installer-SaveApplicationVersion",
                    "tags": [
                      {
                        "key": "Accelerator",
                        "value": "PBMM"
                      }
                    ]
                  }
                }
              }
            }
          },
          "InstallerPipelineRole": {
            "id": "InstallerPipelineRole",
            "path": "InstallerStack/InstallerPipelineRole",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "InstallerStack/InstallerPipelineRole/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                  "aws:cdk:cloudformation:props": {
                    "assumeRolePolicyDocument": {
                      "Statement": [
                        {
                          "Action": "sts:AssumeRole",
                          "Effect": "Allow",
                          "Principal": {
                            "Service": "codepipeline.amazonaws.com"
                          }
                        }
                      ],
                      "Version": "2012-10-17"
                    },
                    "roleName": "PBMMAccel-CP-Installer",
                    "tags": [
                      {
                        "key": "Accelerator",
                        "value": "PBMM"
                      }
                    ]
                  }
                }
              },
              "DefaultPolicy": {
                "id": "DefaultPolicy",
                "path": "InstallerStack/InstallerPipelineRole/DefaultPolicy",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "InstallerStack/InstallerPipelineRole/DefaultPolicy/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                      "aws:cdk:cloudformation:props": {
                        "policyDocument": {
                          "Statement": [
                            {
                              "Action": [
                                "s3:GetObject*",
                                "s3:GetBucket*",
                                "s3:List*",
                                "s3:DeleteObject*",
                                "s3:PutObject*",
                                "s3:Abort*"
                              ],
                              "Effect": "Allow",
                              "Resource": [
                                {
                                  "Fn::GetAtt": [
                                    "ArtifactsBucket2AAC5544",
                                    "Arn"
                                  ]
                                },
                                {
                                  "Fn::Join": [
                                    "",
                                    [
                                      {
                                        "Fn::GetAtt": [
                                          "ArtifactsBucket2AAC5544",
                                          "Arn"
                                        ]
                                      },
                                      "/*"
                                    ]
                                  ]
                                }
                              ]
                            },
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Resource": {
                                "Fn::GetAtt": [
                                  "InstallerPipelineRole1F8864A8",
                                  "Arn"
                                ]
                              }
                            },
                            {
                              "Action": [
                                "codebuild:BatchGetBuilds",
                                "codebuild:StartBuild",
                                "codebuild:StopBuild"
                              ],
                              "Effect": "Allow",
                              "Resource": {
                                "Fn::GetAtt": [
                                  "InstallerProject879FF821",
                                  "Arn"
                                ]
                              }
                            },
                            {
                              "Action": "lambda:ListFunctions",
                              "Effect": "Allow",
                              "Resource": "*"
                            },
                            {
                              "Action": "lambda:InvokeFunction",
                              "Effect": "Allow",
                              "Resource": {
                                "Fn::GetAtt": [
                                  "SaveApplicationVersionLambda1535A3E2",
                                  "Arn"
                                ]
                              }
                            },
                            {
                              "Action": "lambda:InvokeFunction",
                              "Effect": "Allow",
                              "Resource": {
                                "Fn::GetAtt": [
                                  "ExecutionLambda949691DD",
                                  "Arn"
                                ]
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "policyName": "InstallerPipelineRoleDefaultPolicyA2A45F5C",
                        "roles": [
                          {
                            "Ref": "InstallerPipelineRole1F8864A8"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "ArtifactsBucket": {
            "id": "ArtifactsBucket",
            "path": "InstallerStack/ArtifactsBucket",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "InstallerStack/ArtifactsBucket/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::S3::Bucket",
                  "aws:cdk:cloudformation:props": {
                    "tags": [
                      {
                        "key": "Accelerator",
                        "value": "PBMM"
                      }
                    ]
                  }
                }
              },
              "Notifications": {
                "id": "Notifications",
                "path": "InstallerStack/ArtifactsBucket/Notifications"
              }
            }
          },
          "Pipeline": {
            "id": "Pipeline",
            "path": "InstallerStack/Pipeline",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "InstallerStack/Pipeline/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::CodePipeline::Pipeline",
                  "aws:cdk:cloudformation:props": {
                    "roleArn": {
                      "Fn::GetAtt": [
                        "InstallerPipelineRole1F8864A8",
                        "Arn"
                      ]
                    },
                    "stages": [
                      {
                        "name": "Source",
                        "actions": [
                          {
                            "name": "GithubSource",
                            "outputArtifacts": [
                              {
                                "name": "Artifact_Source_GithubSource"
                              }
                            ],
                            "actionTypeId": {
                              "category": "Source",
                              "version": "1",
                              "owner": "ThirdParty",
                              "provider": "GitHub"
                            },
                            "configuration": {
                              "Owner": {
                                "Ref": "GithubOwner"
                              },
                              "Repo": {
                                "Ref": "GithubRepository"
                              },
                              "Branch": {
                                "Ref": "GithubBranch"
                              },
                              "OAuthToken": {
                                "Fn::Join": [
                                  "",
                                  [
                                    "{{resolve:secretsmanager:",
                                    {
                                      "Ref": "GithubSecretId"
                                    },
                                    ":SecretString:::}}"
                                  ]
                                ]
                              },
                              "PollForSourceChanges": false
                            },
                            "runOrder": 1,
                            "namespace": "Source_GithubSource_NS"
                          }
                        ]
                      },
                      {
                        "name": "Deploy",
                        "actions": [
                          {
                            "name": "DeployAccelerator",
                            "inputArtifacts": [
                              {
                                "name": "Artifact_Source_GithubSource"
                              }
                            ],
                            "actionTypeId": {
                              "category": "Build",
                              "version": "1",
                              "owner": "AWS",
                              "provider": "CodeBuild"
                            },
                            "configuration": {
                              "ProjectName": {
                                "Ref": "InstallerProject879FF821"
                              }
                            },
                            "runOrder": 1,
                            "roleArn": {
                              "Fn::GetAtt": [
                                "InstallerPipelineRole1F8864A8",
                                "Arn"
                              ]
                            }
                          }
                        ]
                      },
                      {
                        "name": "UpdateVersion",
                        "actions": [
                          {
                            "name": "UpdateVersion",
                            "actionTypeId": {
                              "category": "Invoke",
                              "version": "1",
                              "owner": "AWS",
                              "provider": "Lambda"
                            },
                            "configuration": {
                              "FunctionName": {
                                "Ref": "SaveApplicationVersionLambda1535A3E2"
                              },
                              "UserParameters": {
                                "Fn::Join": [
                                  "",
                                  [
                                    "{\"commitId\":\"#{Source_GithubSource_NS.CommitId}\",\"repository\":\"",
                                    {
                                      "Ref": "GithubRepository"
                                    },
                                    "\",\"owner\":\"",
                                    {
                                      "Ref": "GithubOwner"
                                    },
                                    "\",\"branch\":\"",
                                    {
                                      "Ref": "GithubBranch"
                                    },
                                    "\"}"
                                  ]
                                ]
                              }
                            },
                            "runOrder": 1,
                            "roleArn": {
                              "Fn::GetAtt": [
                                "InstallerPipelineRole1F8864A8",
                                "Arn"
                              ]
                            }
                          }
                        ]
                      },
                      {
                        "name": "Execute",
                        "actions": [
                          {
                            "name": "ExecuteAcceleratorStateMachine",
                            "actionTypeId": {
                              "category": "Invoke",
                              "version": "1",
                              "owner": "AWS",
                              "provider": "Lambda"
                            },
                            "configuration": {
                              "FunctionName": {
                                "Ref": "ExecutionLambda949691DD"
                              },
                              "UserParameters": {
                                "Fn::Join": [
                                  "",
                                  [
                                    "{\"stateMachineArn\":\"arn:aws:states:",
                                    {
                                      "Ref": "AWS::Region"
                                    },
                                    ":",
                                    {
                                      "Ref": "AWS::AccountId"
                                    },
                                    ":stateMachine:PBMMAccel-MainStateMachine_sm\"}"
                                  ]
                                ]
                              }
                            },
                            "runOrder": 1,
                            "roleArn": {
                              "Fn::GetAtt": [
                                "InstallerPipelineRole1F8864A8",
                                "Arn"
                              ]
                            }
                          }
                        ]
                      }
                    ],
                    "artifactStore": {
                      "type": "S3",
                      "location": {
                        "Ref": "ArtifactsBucket2AAC5544"
                      }
                    },
                    "name": "PBMMAccel-InstallerPipeline",
                    "tags": [
                      {
                        "key": "Accelerator",
                        "value": "PBMM"
                      }
                    ]
                  }
                }
              },
              "Source": {
                "id": "Source",
                "path": "InstallerStack/Pipeline/Source",
                "children": {
                  "GithubSource": {
                    "id": "GithubSource",
                    "path": "InstallerStack/Pipeline/Source/GithubSource"
                  }
                }
              },
              "Deploy": {
                "id": "Deploy",
                "path": "InstallerStack/Pipeline/Deploy",
                "children": {
                  "DeployAccelerator": {
                    "id": "DeployAccelerator",
                    "path": "InstallerStack/Pipeline/Deploy/DeployAccelerator"
                  }
                }
              },
              "UpdateVersion": {
                "id": "UpdateVersion",
                "path": "InstallerStack/Pipeline/UpdateVersion",
                "children": {
                  "UpdateVersion": {
                    "id": "UpdateVersion",
                    "path": "InstallerStack/Pipeline/UpdateVersion/UpdateVersion"
                  }
                }
              },
              "Execute": {
                "id": "Execute",
                "path": "InstallerStack/Pipeline/Execute",
                "children": {
                  "ExecuteAcceleratorStateMachine": {
                    "id": "ExecuteAcceleratorStateMachine",
                    "path": "InstallerStack/Pipeline/Execute/ExecuteAcceleratorStateMachine"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}